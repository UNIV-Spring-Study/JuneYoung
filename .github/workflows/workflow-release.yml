name: CI / CD

on:
  push:
    branches: server # 배포용 브랜치명

jobs:
  CI:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      IMAGE_NAME: jjy
      IMAGE_TAG: latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Google Cloud 인증
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Docker 인증 구성
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev --quiet

      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Gradle 설정
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle (Test 제외)
        run: ./gradlew build --exclude-task test

      - name: Verify JAR
        run: ls -la build/libs/

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build --build-arg SPRING_PROFILE=prod -t asia-northeast3-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/regi01/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push asia-northeast3-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/regi01/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  CD:
    runs-on: ubuntu-latest
    needs: CI

    steps:
      - name: 서버에 SSH로 접속하여 Docker 실행
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            IMAGE_NAME=jjy
            IMAGE_TAG=latest
            GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}

            sudo docker stop board-app || true
            sudo docker rm board-app || true

            sudo docker network inspect app-network >/dev/null 2>&1 || \
              sudo docker network create --driver bridge app-network

            sudo docker login -u _json_key --password-stdin https://asia-northeast3-docker.pkg.dev <<< "${{ secrets.GCP_SA_KEY }}"

            sudo docker pull asia-northeast3-docker.pkg.dev/$GCP_PROJECT_ID/regi01/$IMAGE_NAME:$IMAGE_TAG

            sudo docker run -d \
              --name board-app \
              --network app-network \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://34.22.92.186:3306/Univ \
              -e SPRING_DATASOURCE_USERNAME=root \
              -e SPRING_DATASOURCE_PASSWORD=a89928992@ \
              -e SPRING_DATA_REDIS_HOST=34.22.92.186 \
              -e SPRING_DATA_REDIS_PORT=6379 \
              asia-northeast3-docker.pkg.dev/$GCP_PROJECT_ID/regi01/$IMAGE_NAME:$IMAGE_TAG
